#! /usr/bin/env janet

(use where-defined)

(defn main [& args]
  
  (when (or (= 1 (length args))
            (find |(or (= $ "-h") (= $ "--help")) args))
    (eprint "usage: janet-md-doc MOD [PATH-STRIP-PREFIX...]")
    (eprint "Print janet documentation for a given module, links have PATH-STRIP-PREFIX removed.")
    (os/exit 1))

  (def module (args 1))
  (def trim-prefixes (tuple/slice args 2))

  (defn trim-path
    [file]
    (var trimmed nil)
    (each pfx trim-prefixes
      (when (string/has-prefix? pfx file)
        (set trimmed (string/slice file (inc (length pfx))))
        (break)))
    trimmed)

  (print "# ```" module "```")
  (print "")

  (each [k meta] (sort-by first (pairs (require module)))
    (when (and (symbol? k) (not (get meta :private)))
      (print "## ```" module "/" k "```")
      (when-let [value (get meta :value)]
        (print "type: " (type value) "\n")
        (when-let [[file line] (where-defined value)]
          (when-let [trimmed (trim-path file)]
            (def formatted-src (string trimmed (if line (string "#L" line) "")))
            (print "[" formatted-src "](" formatted-src ")\n"))))
      (when-let [doc (get meta :doc)]
        (print "```")
        (print (doc-format doc 100))
        (print "```")
        (print ""))))

  (print "")
  (print "Docs generated by: https://github.com/andrewchambers/janet-md-doc"))
